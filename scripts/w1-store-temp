#!/bin/sh
#######################################################
#
# Description:
#   Store the temperature value to the database
# Last modified: 2013-01-02
#
#######################################################

# Initialization
VALUE=$1 # Have possibility to import the value as an argument
SQLITE="`which sqlite3`"
DIR="${0%/*}" # Run directory
DSN="$DIR/../data/temperature.db" # Database location
GET_TEMP=$DIR/w1-temp

if [ -z "$SQLITE" ]; then
    echo "SQLite not found. Exiting"
    exit 1
fi
if [ ! -f $DSN ]; then
    echo "Database does not exist. Creating it."
    echo "
        PRAGMA foreign_keys = ON;
        CREATE TABLE parameter(
          id INTEGER PRIMARY KEY NOT NULL,
          name TEXT,
          value TEXT);
        CREATE TABLE location(
          id INTEGER PRIMARY KEY NOT NULL,
          location TEXT);
        CREATE TABLE temperature(
          id INTEGER PRIMARY KEY NOT NULL,
          locationId INTEGER,
          value REAL NOT NULL,
          createDate DATETIME NOT NULL,
          FOREIGN KEY(locationId) REFERENCES location(id));
        CREATE INDEX idx1_temperature ON temperature (createDate);
        " | $SQLITE $DSN
fi

# Get the temperature value, if not given as an argument
[ -z "$VALUE" ] && VALUE=`$GET_TEMP`

#Fetch the current location from parameters
#CURRENT_LOCATION=`$SQLITE $DSN "select value from parameter where name = 'CURRENT_LOCATION'"`
CURRENT_LOCATION=`$SQLITE $DSN "select value from parameter where name = 'current_location'"`
# Insert 
$SQLITE $DSN "INSERT INTO temperature(id, locationId, value, createDate) \
    VALUES (NULL, $CURRENT_LOCATION, $VALUE, datetime('now','localtime'))"

# Debug query for last values
#$SQLITE $DSN "select l.location, t.value, t.createDate
#    from temperature t, location l 
#    where t.locationId = l.Id
#    order by t.createDate desc 
#    limit 10"

exit 0
